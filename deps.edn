 {
  :deps {
         org.clojure/clojure {:mvn/version "1.10.0"}
         org.clojure/tools.cli {:mvn/version "0.4.1"}
         org.martinklepsch/clj-http-lite {:mvn/version "0.4.1"}
         ; expound {:mvn/version "0.6.0"}
         ; com.velisco/strgen {:mvn/version "0.1.7"}
         ; org.clojure/test.check {:mvn/version "0.10.0-alpha2"}
         com.rpl/specter {:mvn/version "1.1.1"}
         ; org.clojure/tools.cli {:mvn/version "0.3.7"}
         ; eftest {:mvn/version "0.5.2"}
         ;; org.clojure/tools.logging {:mvn/version"0.4.1"}
         com.taoensso/timbre {:mvn/version "4.10.0"}
         ;; [io.pedestal/pedestal.immutant "0.5.3"]
         ;; [io.pedestal/pedestal.tomcat "0.5.3"]
         ;;ch.qos.logback/logback-classic {:mvn/version "1.2.3" :exclusions [org.slf4j/slf4j-api]}
         ;;org.slf4j/jul-to-slf4j {:mvn/version "1.7.22"}
         ;;org.slf4j/jcl-over-slf4j {:mvn/version "1.7.22"}
         ;;org.slf4j/log4j-over-slf4j {:mvn/version "1.7.22"}
         ;http-kit {:mvn/version "2.3.0"}
         cheshire {:mvn/version "5.8.0"}}
         ; org.clojure/data.xml {:mvn/version "0.2.0-alpha4"}}


  :paths ["src" "test"]

  :aliases {
            :1.8 {:override-deps {org.clojure/clojure {:mvn/version "1.8.0"}}}
            :1.9 {:override-deps {org.clojure/clojure {:mvn/version "1.9.0"}}}
            :rebl {:extra-deps {com.bhauman/rebel-readline {:mvn/version "0.1.3"}}
                    :main-opts  ["-m" "rebel-readline.main"]}
            :master {:override-deps {org.clojure/clojure {:mvn/version "1.10.0-master-SNAPSHOT"}}}
            :bench {:extra-deps {criterium {:mvn/version "0.4.4"}}}
            :socket {:jvm-opts ["-Dclojure.server.repl={:port,5555,:accept,clojure.core.server/repl}"]}
            :nrepl {:extra-deps {org.clojure/tools.nrepl {:mvn/version "0.2.12"}}
                    :main-opts ["-e" "(require,'[clojure.tools.nrepl.server,:refer,[start-server]]),(start-server,:port,5555)"]}
            :test {:extra-deps {eftest {:mvn/version "0.5.2"}}
                   :main-opts ["-e" "(require,'[eftest.runner,:refer,[find-tests,run-tests]]),(run-tests,(find-tests,\"test\"))"]}
            :native-image
                      {:main-opts ["-m clj.native-image githubid.core"
                                   "--report-unsupported-elements-at-runtime"
                                   "--enable-url-protocols=http,https"
                                   "-Dclojure.compiler.direct-linking=true"]
                       :extra-deps {clj.native-image {:git/url "https://github.com/taylorwood/clj.native-image.git"
                                                      :sha "d97f25aa153e0f94139f5d03e60a345151815d4d"}}}

            ;:native-image
            ;      {:extra-deps
            ;         {org.clojure/tools.cli {:mvn/version "0.3.7"}
            ;          org.clojure/tools.deps.alpha {:mvn/version "0.5.435"}
            ;          org.clojure/tools.namespace  {:mvn/version "0.2.11"}
            ;          luchiniatwork/cambada {:mvn/version "1.0.0"}}
            ;          ;;db/driver {:local/root "/mnt/jamastore1/WIP/cambada/target/cambada-1.0.0-SNAPSHOT.jar"}}
            ;       :main-opts ["-m" "cambada.native-image"
            ;                   "-m" "githubid.core"]}
            :uberjar
             {:extra-deps
                {org.clojure/tools.cli {:mvn/version "0.3.7"}
                 org.clojure/tools.deps.alpha {:mvn/version "0.5.435"}
                 org.clojure/tools.namespace  {:mvn/version "0.2.11"}
                 db/driver {:local/root "/mnt/jamastore1/WIP/cambada/target/cambada-1.0.0-SNAPSHOT.jar"}}
              :main-opts ["-m" "cambada.uberjar"
                          "-m" "githubid.core"]}}}
